import argparse
import time
from pathlib import Path

proc_time_by_file = {
    '2018_06_28_00_00.txt': 22.5050827618485,
    '2018_06_28_00_15.txt': 36.2682872380298,
    '2018_06_28_00_30.txt': 16.2480441711007,
    '2018_06_28_00_45.txt': 18.2287934550656,
    '2018_06_28_01_00.txt': 12.8346711037808,
    '2018_06_28_01_15.txt': 33.63459017035,
    '2018_06_28_01_30.txt': 22.6400680239531,
    '2018_06_28_01_45.txt': 26.1400089117246,
    '2018_06_28_02_00.txt': 17.5672471618555,
    '2018_06_28_02_15.txt': 28.0042010135898,
    '2018_06_28_02_30.txt': 19.2419391774127,
    '2018_06_28_02_45.txt': 33.3947852137175,
    '2018_06_28_03_00.txt': 36.9799989939014,
    '2018_06_28_03_15.txt': 24.2475979251802,
    '2018_06_28_03_30.txt': 20.0994090603185,
    '2018_06_28_03_45.txt': 20.5797647488311,
    '2018_06_28_04_00.txt': 18.1857037597593,
    '2018_06_28_04_15.txt': 35.2466807100795,
    '2018_06_28_04_30.txt': 36.716249061566,
    '2018_06_28_04_45.txt': 31.164887959919,
    '2018_06_28_05_00.txt': 29.1469056301469,
    '2018_06_28_05_15.txt': 34.3604648387897,
    '2018_06_28_05_30.txt': 16.321293330963,
    '2018_06_28_05_45.txt': 32.8551499306161,
    '2018_06_28_06_00.txt': 28.3011159956328,
    '2018_06_28_06_15.txt': 36.2694804000244,
    '2018_06_28_06_30.txt': 34.3742056461328,
    '2018_06_28_06_45.txt': 25.1437069907037,
    '2018_06_28_07_00.txt': 35.7792421338007,
    '2018_06_28_07_15.txt': 23.7838606788877,
    '2018_06_28_07_30.txt': 30.3121944393578,
    '2018_06_28_07_45.txt': 34.0033779643884,
    '2018_06_28_08_00.txt': 28.434813710176,
    '2018_06_28_08_15.txt': 30.4120304924292,
    '2018_06_28_08_30.txt': 20.2908910256915,
    '2018_06_28_08_45.txt': 21.0061099625921,
    '2018_06_28_09_00.txt': 35.4181587511467,
    '2018_06_28_09_15.txt': 25.230061659733,
    '2018_06_28_09_30.txt': 16.2048091744751,
    '2018_06_28_09_45.txt': 27.5437932582055,
    '2018_06_28_10_00.txt': 28.8275468549865,
    '2018_06_28_10_15.txt': 27.8661810905365,
    '2018_06_28_10_30.txt': 26.586307337439,
    '2018_06_28_10_45.txt': 25.2388228840486,
    '2018_06_28_11_00.txt': 35.0484145010571,
    '2018_06_28_11_15.txt': 32.2205758282025,
    '2018_06_28_11_30.txt': 37.0766722895912,
    '2018_06_28_11_45.txt': 26.0791130145596,
    '2018_06_28_12_00.txt': 36.7521343763152,
    '2018_06_28_12_15.txt': 12.8775605863518,
    '2018_06_28_12_30.txt': 16.0389467853498,
    '2018_06_28_12_45.txt': 20.289797938071,
    '2018_06_28_13_00.txt': 18.1674014459417,
    '2018_06_28_13_15.txt': 28.035331169119,
    '2018_06_28_13_30.txt': 14.5393349891228,
    '2018_06_28_13_45.txt': 31.462647808123,
    '2018_06_28_14_00.txt': 27.1601525038802,
    '2018_06_28_14_15.txt': 17.1779466222489,
    '2018_06_28_14_30.txt': 29.3624967663806,
    '2018_06_28_14_45.txt': 32.004264910272,
    '2018_06_28_15_00.txt': 36.86203997139,
    '2018_06_28_15_15.txt': 20.6448372040311,
    '2018_06_28_15_30.txt': 22.9457731247361,
    '2018_06_28_15_45.txt': 22.5354117381588,
    '2018_06_28_16_00.txt': 37.072831356361,
    '2018_06_28_16_15.txt': 21.715066387141,
    '2018_06_28_16_30.txt': 20.1183597438333,
    '2018_06_28_16_45.txt': 21.4763721304863,
    '2018_06_28_17_00.txt': 21.4287093760826,
    '2018_06_28_17_15.txt': 29.8167205199528,
    '2018_06_28_17_30.txt': 28.3136725686459,
    '2018_06_28_17_45.txt': 35.687018983232,
    '2018_06_28_18_00.txt': 35.3763016737061,
    '2018_06_28_18_15.txt': 35.9962250539133,
    '2018_06_28_18_30.txt': 30.486624020228,
    '2018_06_28_18_45.txt': 14.6953195763003,
    '2018_06_28_19_00.txt': 37.3213580501094,
    '2018_06_28_19_15.txt': 28.8380489138108,
    '2018_06_28_19_30.txt': 28.3122564614931,
    '2018_06_28_19_45.txt': 29.744281560382,
    '2018_06_28_20_00.txt': 25.9313630093157,
    '2018_06_28_20_15.txt': 35.6121705711708,
    '2018_06_28_20_30.txt': 17.3681563003662,
    '2018_06_28_20_45.txt': 14.6148947031508,
    '2018_06_28_21_00.txt': 25.4629607097677,
    '2018_06_28_21_15.txt': 24.5448417951384,
    '2018_06_28_21_30.txt': 30.9103012439252,
    '2018_06_28_21_45.txt': 32.9414082828869,
    '2018_06_28_22_00.txt': 23.1579187312586,
    '2018_06_28_22_15.txt': 19.7576042330726,
    '2018_06_28_22_30.txt': 19.5404609513679,
    '2018_06_28_22_45.txt': 21.5253149532432,
    '2018_06_28_23_00.txt': 18.2054742312941,
    '2018_06_28_23_15.txt': 15.6001768761515,
    '2018_06_28_23_30.txt': 15.5330085907067,
    '2018_06_28_23_45.txt': 25.9757180424009
}


def fillin(targetdir: Path, time_scale: float = 1):
    """
    Simulates filling in the data. Note that it (1) it runs sleep first, so you can start this and
    then begin your processes and (2) secondsInMin parameter can be set to very small numbers to
    make the simulation faster.
    """
    if targetdir.exists() and targetdir.is_dir() and not list(targetdir.iterdir()):
        for fname, proc_time_sec in proc_time_by_file.items():
            time.sleep(time_scale * 15)
            with open(targetdir / fname, 'w') as f:
                f.write(str(time_scale * proc_time_sec))
    else:
        print("Directory Issue: Either does not exist or is not empty")


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("targetdir", type=Path)
    parser.add_argument("--time-scale", type=float, default=1)
    args = parser.parse_args()

    fillin(args.targetdir, args.time_scale)
